---
import type { TableData } from "../types"
import { IMAGE_PATH } from "../../constants"
interface Props {
  data: TableData
  sort?: { [key: string]: "asc" | "desc" }
  showForms?: boolean
}

const { data, sort, showForms } = Astro.props

const cols = [
  { label: "#", sort: "id", type: "number" },
  { label: "Image" },
  { label: "Name", sort: "name" },
  { label: "Type", sort: "type" },
]
---

<table class="list">
  <thead>
    <tr>
      {
        cols.map((col) => {
          const colProps = {
            "data-sort": col.sort,
            "data-type": col.type,
            "data-dir": (sort && col.sort && sort[col.sort]) ?? undefined,
          }
          return <th {...colProps}>{col.label}</th>
        })
      }
    </tr>
  </thead>
  <tbody>
    {
      data.map((pokemon) => {
        const forms = showForms ? pokemon.forms : [pokemon.forms[0]]

        return forms.map((form, i) => {
          return (
            <tr data-id={pokemon.id} data-formid={form.id} data-name={pokemon.name} data-form={pokemon.name}>
              <td data-sort="id" data-value={pokemon.id}>
                <strong class="pokemon-name">{pokemon.id}</strong>
                {form.id !== pokemon.id && (showForms === true || pokemon.forms.length > 1) && (
                  <span class="form-name">{form.id}</span>
                )}
              </td>
              <td>{form.image.normal && <img loading="lazy" src={`${IMAGE_PATH}/${form.image.normal}.png`} />}</td>
              <td data-sort="name" data-value={pokemon.name}>
                <span class="pokemon-name">{pokemon.name}</span>
                {form.name !== pokemon.name && (showForms === true || pokemon.forms.length > 1) && (
                  <span class="form-name">{form.name}</span>
                )}
              </td>
              <td data-sort="type">
                <ul class="types">
                  {form.type.map((t) => (
                    <li>
                      <figure data-type={t.toLowerCase()} />
                      <span>{t}</span>
                    </li>
                  ))}
                </ul>
              </td>
            </tr>
          )
        })
      })
    }
  </tbody>
</table>

<dialog closedby="any" class="lightbox">
  <header></header>
  <picture></picture>
  <nav>
    <button data-action="prev">&larr;</button>
    <button data-action="next">&rarr;</button>
  </nav>
</dialog>

<script src="../scripts/table.ts"></script>
