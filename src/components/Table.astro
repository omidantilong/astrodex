---
import type { Pokemon } from "../types"

interface Props {
  data: Pokemon[]
  sort?: { [key: string]: "asc" | "desc" }
}

const { data, sort } = Astro.props

const cols = [
  { label: "#", sort: "id", type: "number" },
  { label: "Image" },
  { label: "Name", sort: "name" },
  { label: "Type", sort: "type" },
]
---

<table class="list">
  <thead>
    <tr>
      {
        cols.map((col) => {
          const colProps = {
            "data-sort": col.sort,
            "data-type": col.type,
            "data-dir": (sort && col.sort && sort[col.sort]) ?? undefined,
          }
          return <th {...colProps}>{col.label}</th>
        })
      }
    </tr>
  </thead>
  <tbody>
    {
      data.map((pokemon) => {
        return (
          <tr data-id={pokemon.id} data-name={pokemon.name}>
            <td data-sort="id">{pokemon.id}</td>
            <td>
              <img loading="lazy" src={pokemon.image.normal} />
            </td>
            <td data-sort="name">{pokemon.name}</td>
            <td data-sort="type">
              <ul class="types">
                {pokemon.type.map((t) => (
                  <li>
                    <figure data-type={t.toLowerCase()} />
                    <span>{t}</span>
                  </li>
                ))}
              </ul>
            </td>
          </tr>
        )
      })
    }
  </tbody>
</table>

<dialog closedby="any" class="lightbox">
  <header></header>
  <picture></picture>
  <nav>
    <button data-action="prev">&larr;</button>
    <button data-action="next">&rarr;</button>
  </nav>
</dialog>

<script src="../scripts/table.ts"></script>
